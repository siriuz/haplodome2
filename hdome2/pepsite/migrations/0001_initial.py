# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2016-02-02 04:41
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Allele',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=200)),
                ('isSer', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True, default='', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Antibody',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('link', models.CharField(blank=True, max_length=400, null=True)),
                ('description', models.TextField(blank=True, default='', null=True)),
                ('alleles', models.ManyToManyField(blank=True, null=True, to='pepsite.Allele')),
            ],
        ),
        migrations.CreateModel(
            name='CellLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('tissue_type', models.CharField(blank=True, max_length=200, null=True)),
                ('isTissue', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True, default='', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300, unique=True)),
                ('rank', models.IntegerField(blank=True, null=True)),
                ('datetime', models.DateTimeField(blank=True, null=True)),
                ('data', models.FileField(blank=True, null=True, upload_to='')),
                ('gradient_min', models.FloatField(blank=True, null=True)),
                ('gradient_max', models.FloatField(blank=True, null=True)),
                ('gradient_duration', models.FloatField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, default='', null=True)),
                ('confidence_cutoff', models.FloatField(blank=True, null=True)),
                ('dmass_cutoff', models.FloatField(blank=True, null=True)),
            ],
            options={
                'permissions': (('view_dataset', 'can view dataset'), ('edit_dataset', 'can edit dataset')),
            },
        ),
        migrations.CreateModel(
            name='Entity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('common_name', models.CharField(max_length=200)),
                ('sci_name', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.TextField(blank=True, default='', null=True)),
                ('isOrganism', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Experiment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, default='', null=True)),
                ('notes', models.TextField(blank=True, default='', null=True)),
                ('cell_line', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pepsite.CellLine')),
            ],
            options={
                'permissions': (('view_experiment', 'can view experiment'), ('view_experiment_disallowed', 'can view all experiment entries'), ('edit_experiment', 'can edit experiment')),
            },
        ),
        migrations.CreateModel(
            name='Expression',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isSilenced', models.BooleanField(default=False)),
                ('expression_level', models.FloatField(default=100.0)),
                ('allele', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pepsite.Allele')),
                ('cell_line', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pepsite.CellLine')),
            ],
        ),
        migrations.CreateModel(
            name='ExternalDb',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('db_name', models.CharField(max_length=200)),
                ('url_stump', models.CharField(max_length=400)),
                ('url_suffix', models.CharField(blank=True, max_length=400, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Gene',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('gene_class', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, default='')),
            ],
        ),
        migrations.CreateModel(
            name='IdEstimate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delta_mass', models.FloatField()),
                ('confidence', models.FloatField()),
                ('isValid', models.BooleanField(default=False)),
                ('isRemoved', models.BooleanField(default=False)),
                ('reason', models.TextField(blank=True, default='', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Individual',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(max_length=200, unique=True)),
                ('description', models.TextField(blank=True, default='', null=True)),
                ('nation_origin', models.CharField(blank=True, max_length=200, null=True)),
                ('isHost', models.BooleanField(default=False)),
                ('isAnonymous', models.BooleanField(default=True)),
                ('web_ref', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('entity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pepsite.Entity')),
            ],
        ),
        migrations.CreateModel(
            name='Instrument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('precursor_mass', models.FloatField()),
                ('mz', models.FloatField()),
                ('charge_state', models.IntegerField()),
                ('retention_time', models.FloatField()),
                ('spectrum', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pepsite.Dataset')),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pepsite.Experiment')),
            ],
        ),
        migrations.CreateModel(
            name='Lodgement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField()),
                ('title', models.CharField(max_length=300, unique=True)),
                ('datafilename', models.CharField(blank=True, max_length=400, null=True)),
                ('isFree', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': (('view_lodgement', 'can view lodgement'), ('edit_lodgement', 'can edit lodgement')),
            },
        ),
        migrations.CreateModel(
            name='LookupCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=200)),
                ('cell_lines', models.ManyToManyField(to='pepsite.CellLine')),
                ('externaldb', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pepsite.ExternalDb')),
            ],
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Peptide',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence', models.CharField(max_length=200)),
                ('mass', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('initial_res', models.IntegerField()),
                ('final_res', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Protein',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prot_id', models.CharField(blank=True, max_length=200, null=True)),
                ('name', models.TextField(blank=True, default='', null=True)),
                ('description', models.TextField(blank=True, default='', null=True)),
                ('sequence', models.TextField(blank=True, default='', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ptm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, default='', null=True)),
                ('mass_change', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(blank=True, null=True)),
                ('journal', models.TextField(blank=True, null=True)),
                ('display', models.TextField(blank=True, default='', null=True)),
                ('cell_lines', models.ManyToManyField(to='pepsite.CellLine')),
                ('lodgements', models.ManyToManyField(to='pepsite.Lodgement')),
                ('lookupcode', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pepsite.LookupCode')),
            ],
        ),
        migrations.AddField(
            model_name='lookupcode',
            name='protein',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pepsite.Protein'),
        ),
        migrations.AddField(
            model_name='ion',
            name='peptides',
            field=models.ManyToManyField(through='pepsite.IdEstimate', to='pepsite.Peptide'),
        ),
        migrations.AddField(
            model_name='instrument',
            name='manufacturer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pepsite.Manufacturer'),
        ),
        migrations.AddField(
            model_name='idestimate',
            name='ion',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pepsite.Ion'),
        ),
        migrations.AddField(
            model_name='idestimate',
            name='peptide',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pepsite.Peptide'),
        ),
        migrations.AddField(
            model_name='idestimate',
            name='proteins',
            field=models.ManyToManyField(to='pepsite.Protein'),
        ),
        migrations.AddField(
            model_name='idestimate',
            name='ptms',
            field=models.ManyToManyField(to='pepsite.Ptm'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='experiment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pepsite.Experiment'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='instrument',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pepsite.Instrument'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='lodgement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pepsite.Lodgement'),
        ),
        migrations.AddField(
            model_name='cellline',
            name='alleles',
            field=models.ManyToManyField(through='pepsite.Expression', to='pepsite.Allele'),
        ),
        migrations.AddField(
            model_name='cellline',
            name='individuals',
            field=models.ManyToManyField(to='pepsite.Individual'),
        ),
        migrations.AddField(
            model_name='cellline',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pepsite.CellLine'),
        ),
        migrations.AddField(
            model_name='antibody',
            name='experiments',
            field=models.ManyToManyField(blank=True, null=True, to='pepsite.Experiment'),
        ),
        migrations.AddField(
            model_name='allele',
            name='gene',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pepsite.Gene'),
        ),
        migrations.AlterUniqueTogether(
            name='allele',
            unique_together=set([('gene', 'code')]),
        ),
    ]
